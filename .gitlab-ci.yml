variables:
  GIT_STRATEGY: clone

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH

stages:
  - black
  - docs
  - build
  - publish

# Check black formatting of code

black:
  stage: black
  image: python:latest
  before_script:
    - pip install black
  script:
    - black --check .

# Build documentation

docs:
  stage: docs
  image: python:latest
  before_script:
    - pip install -r docs/requirements.txt
  script:
    - cd docs
    - make html
  artifacts:
    paths:
      - docs/build/html
    expire_in: 1 week

# Templates for build and publish jobs

.build:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  script:
    - apk add make git
    - make build PREFIX_BUILD=${CI_REGISTRY_IMAGE}
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - make push PREFIX_BUILD=${CI_REGISTRY_IMAGE}

.publish:
  stage: publish
  image: docker:stable
  services:
    - docker:dind
  script:
    - apk add make git
    - make pull PREFIX_BUILD=${CI_REGISTRY_IMAGE}
    - docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_HOST
    - make push_release PREFIX_BUILD=${CI_REGISTRY_IMAGE} || true

# Build and publish jobs for each workflow

# batch_imaging

build-batch_imaging:
  extends: .build
  before_script:
     - cd src/batch_imaging
  only:
    changes:
      - src/batch_imaging/*

publish-batch_imaging:
  extends: .publish
  before_script:
    - cd src/batch_imaging
  only:
    refs:
      - master
    changes:
      - src/batch_imaging/*

# delivery

build-delivery:
  extends: .build
  before_script:
    - cd src/delivery
  only:
    changes:
      - src/delivery/*

publish-delivery:
  extends: .publish
  before_script:
    - cd src/delivery
  only:
    refs:
      - master
    changes:
      - src/delivery/*

# plasma_pipeline

build-plasma_pipeline:
  extends: .build
  before_script:
    - cd src/plasma_pipeline
  only:
    changes:
      - src/plasma_pipeline/*

publish-plasma_pipeline:
  extends: .publish
  before_script:
    - cd src/plasma_pipeline
  only:
    refs:
      - master
    changes:
      - src/plasma_pipeline/*

# pss_receive

build-pss_receive:
  extends: .build
  before_script:
    - cd src/pss_receive
  only:
    changes:
      - src/pss_receive/*

publish-pss_receive:
  extends: .publish
  before_script:
    - cd src/pss_receive
  only:
    refs:
      - master
    changes:
      - src/pss_receive/*

# test_batch

build-test_batch:
  extends: .build
  before_script:
    - cd src/test_batch
  only:
    changes:
      - src/test_batch/*

publish-test_batch:
  extends: .publish
  before_script:
    - cd src/test_batch
  only:
    refs:
      - master
    changes:
      - src/test_batch/*

# test_daliuge

build-test_daliuge:
  extends: .build
  before_script:
    - cd src/test_daliuge
  only:
    changes:
      - src/test_daliuge/*

publish-test_daliuge:
  extends: .publish
  before_script:
    - cd src/test_daligue
  only:
    refs:
      - master
    changes:
      - src/test_daliuge/*

# test_dask

build-test_dask:
  extends: .build
  before_script:
    - cd src/test_dask
  only:
    changes:
      - src/test_dask/*

publish-test_dask:
  extends: .publish
  before_script:
    - cd src/test_dask
  only:
    refs:
      - master
    changes:
      - src/test_dask/*

# test_new_receive

build-test_new_receive:
  extends: .build
  before_script:
    - cd src/test_new_receive
  only:
    changes:
      - src/test_new_receive/*

publish-test_new_receive:
  extends: .publish
  before_script:
    - cd src/test_new_receive
  only:
    refs:
      - master
    changes:
      - src/test_new_receive/*

# test_realtime

build-test_realtime:
  extends: .build
  before_script:
    - cd src/test_realtime
  only:
    changes:
      - src/test_realtime/*

publish-test_realtime:
  extends: .publish
  before_script:
    - cd src/test_realtime
  only:
    refs:
      - master
    changes:
      - src/test_realtime/*

# test_receive_addresses

build-test_receive_addresses:
  extends: .build
  before_script:
    - cd src/test_receive_addresses
  only:
    changes:
      - src/test_receive_addresses/*

publish-test_receive_addresses:
  extends: .publish
  before_script:
    - cd src/test_receive_addresses
  only:
    refs:
      - master
    changes:
      - src/test_receive_addresses/*

# vis_receive

build-vis_receive:
  extends: .build
  before_script:
    - cd src/vis_receive
  only:
    changes:
      - src/vis_receive/*

publish-vis_receive:
  extends: .publish
  before_script:
    - cd src/vis_receive
  only:
    refs:
      - master
    changes:
      - src/vis_receive/*

# Create Gitlab CI badges from CI metrics
# https://developer.skatelescope.org/en/latest/tools/continuousintegration.html#automated-collection-of-ci-health-metrics-as-part-of-the-ci-pipeline
include:
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/post_step.yml'
