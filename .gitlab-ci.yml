variables:
  GIT_STRATEGY: clone

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH

stages:
  - black
  - build_docs
  - build_workflows
  - publish

black:
  stage: black
  image: python:latest
  before_script:
    - pip3 install black
  script:
    - black --check .

# "pages" is a special job that is used to upload static content to GitLab
# that can be used to serve a website (i.e. docs for ska-sim-low) (taken from
# https://gitlab.com/ska-telescope/developer.skatelescope.org/-/blob/master/.gitlab-ci.yml)
pages:
  stage: build_docs
  image: python:latest
  script:
    - pip3 install --upgrade pip
    - pip install -r docs/requirements.txt
    - make -C docs html
    # for some reason, after the above command, make leaves the working directory
    # so in the next cp command we need to specify the full path
    - mkdir -p public
    - cp -r /builds/ska-telescope/sdp/ska-sdp-science-pipelines/docs/build/html/* public
  artifacts:
    paths:  # for this stage to work with "pages", data have to be in "public"
      - public
    expire_in: 1 week

.docker_build_workflow:
  stage: build_workflows
  image: docker:stable
  services:
    - docker:dind
  script:
    - apk add make git
    - make build PREFIX_BUILD=${CI_REGISTRY_IMAGE}
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - make push PREFIX_BUILD=${CI_REGISTRY_IMAGE}

build-batch_imaging:
  extends: .docker_build_workflow
  before_script:
     - cd src/batch_imaging
  only:
    changes:
      - src/batch_imaging/*

build-delivery:
  extends: .docker_build_workflow
  before_script:
    - cd src/delivery
  only:
    changes:
      - src/delivery/*

build-plasma_pipeline:
  extends: .docker_build_workflow
  before_script:
    - cd src/plasma_pipeline
  only:
    changes:
      - src/plasma_pipeline/*

build-pss_receive:
  extends: .docker_build_workflow
  before_script:
    - cd src/pss_receive
  only:
    changes:
      - src/pss_receive/*

build-test_batch:
  extends: .docker_build_workflow
  before_script:
    - cd src/test_batch
  only:
    changes:
      - src/test_batch/*

build-test_daliuge:
  extends: .docker_build_workflow
  before_script:
    - cd src/test_daliuge
  only:
    changes:
      - src/test_daliuge/*

build-test_dask:
  extends: .docker_build_workflow
  before_script:
    - cd src/test_dask
  only:
    changes:
      - src/test_dask/*

build-test_new_receive:
  extends: .docker_build_workflow
  before_script:
    - cd src/test_new_receive
  only:
    changes:
      - src/test_new_receive/*

build-test_realtime:
  extends: .docker_build_workflow
  before_script:
    - cd src/test_realtime
  only:
    changes:
      - src/test_realtime/*

build-test_receive_addresses:
  extends: .docker_build_workflow
  before_script:
    - cd src/test_receive_addresses
  only:
    changes:
      - src/test_receive_addresses/*

build-vis_receive:
  extends: .docker_build_workflow
  before_script:
    - cd src/vis_receive
  only:
    changes:
      - src/vis_receive/*

.publish:
  stage: publish
  image: docker:stable
  services:
    - docker:dind
  script:
    - apk add make git
    - make pull PREFIX_BUILD=${CI_REGISTRY_IMAGE}
    - docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_HOST
    - make push_release PREFIX_BUILD=${CI_REGISTRY_IMAGE} || true

publish-batch_imaging:
  extends: .publish
  before_script:
    - cd src/batch_imaging
  only:
    refs:
      - master
    changes:
      - src/batch_imaging/*

publish-delivery:
  extends: .publish
  before_script:
    - cd src/delivery
  only:
    refs:
      - master
    changes:
      - src/delivery/*

publish-plasma_pipeline:
  extends: .publish
  before_script:
    - cd src/plasma_pipeline
  only:
    refs:
      - master
    changes:
      - src/plasma_pipeline/*

publish-pss_receive:
  extends: .publish
  before_script:
    - cd src/pss_receive
  only:
    refs:
      - master
    changes:
      - src/pss_receive/*

publish-test_batch:
  extends: .publish
  before_script:
    - cd src/test_batch
  only:
    refs:
      - master
    changes:
      - src/test_batch/*

publish-test_daliuge:
  extends: .publish
  before_script:
    - cd src/test_daligue
  only:
    refs:
      - master
    changes:
      - src/test_daliuge/*

publish-test_dask:
  extends: .publish
  before_script:
    - cd src/test_dask
  only:
    refs:
      - master
    changes:
      - src/test_dask/*

publish-test_new_receive:
  extends: .publish
  before_script:
    - cd src/test_new_receive
  only:
    refs:
      - master
    changes:
      - src/test_new_receive/*

publish-test_realtime:
  extends: .publish
  before_script:
    - cd src/test_realtime
  only:
    refs:
      - master
    changes:
      - src/test_realtime/*

publish-test_receive_addresses:
  extends: .publish
  before_script:
    - cd src/test_receive_addresses
  only:
    refs:
      - master
    changes:
      - src/test_receive_addresses/*

publish-vis_receive:
  extends: .publish
  before_script:
    - cd src/vis_receive
  only:
    refs:
      - master
    changes:
      - src/vis_receive/*

# Create Gitlab CI badges from CI metrics
# https://developer.skatelescope.org/en/latest/tools/continuousintegration.html#automated-collection-of-ci-health-metrics-as-part-of-the-ci-pipeline
include:
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/post_step.yml'
